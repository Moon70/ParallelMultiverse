package abyss.parallelmultiverse.part07turnbars;

import abyss.lunarengine.APart;
import abyss.lunarengine.LunarEngine;
import abyss.lunarengine.Screen;
import abyss.lunarengine.gfx.Bob;
import abyss.lunarengine.gfx.LordFader;
import abyss.lunarengine.sinatra.Sinatra;

public class PartTurnbars extends APart{
	public static final int BACKGROUNDCOLOR = 0x0A0103;
	public Turnbar[] turnbars;

	private Bob bob[];
	private int oPos;
	private int oBorder;
	private int oDir=1;
	private int animPos;

	private Sinatra sinatra1X1;
	private Sinatra sinatra1X2;
	private Sinatra sinatra2X1;
	private Sinatra sinatra2X2;
	private Sinatra sinatra3X1;
	private Sinatra sinatra3X2;
	private Sinatra sinatra4X1;
	private Sinatra sinatra4X2;
	private Sinatra sinatra5X1;
	private Sinatra sinatra5X2;

	private Sinatra sinatra1Y1;
	private Sinatra sinatra1Y2;
	private Sinatra sinatra2Y1;
	private Sinatra sinatra2Y2;
	private Sinatra sinatra3Y1;
	private Sinatra sinatra3Y2;
	private Sinatra sinatra4Y1;
	private Sinatra sinatra4Y2;

	public static void main(String[] args){
		try{
			LunarEngine.initializeEngine();
			PartTurnbars partTurnbars=new PartTurnbars();
			partTurnbars.precalc();
			partTurnbars.initialize();
			partTurnbars.turnbars[0].fadeIn=true;
			LunarEngine.setActivePart(partTurnbars);
			LunarEngine.startEngine();

		}catch(Throwable throwable){
			LunarEngine.throwableHandler(throwable);
		}
	}
	
	public PartTurnbars() {
		bob=new Bob[9];
		for(int i=0;i<bob.length;i++) {
			bob[i]=new Bob(64,128,256);
		}
	}
	
	@Override
	public void precalc() {
		LordFader[] fader1=new LordFader[bob.length];
		LordFader[] fader2=new LordFader[bob.length];
		
		fader1[0]=new LordFader(0x9fBfCf,0x000000,128);
		fader2[0]=new LordFader(0x000000,0x8f7fCf,128);
		fader1[1]=new LordFader(0x5f0f0f,0x000000,128);
		fader2[1]=new LordFader(0x000000,0x6f6f7f,128);
		fader1[2]=new LordFader(0x8fAf5f,0x000000,128);
		fader2[2]=new LordFader(0x000000,0x0f3f2f,128);
		fader1[3]=new LordFader(0xCf7f0f,0x000000,128);
		fader2[3]=new LordFader(0x000000,0xEfDf0f,128);
		fader1[4]=new LordFader(0xDfCf8f,0x000000,128);
		fader2[4]=new LordFader(0x000000,0xFfEfDf,128);
		fader1[5]=new LordFader(0x5f2f4f,0x000000,128);
		fader2[5]=new LordFader(0x000000,0x4f4f2f,128);
		fader1[6]=new LordFader(0x8f4f0f,0x000000,128);
		fader2[6]=new LordFader(0x000000,0x0f4f3f,128);
		fader1[7]=new LordFader(0x2f4f4f,0x000000,128);
		fader2[7]=new LordFader(0x000000,0x5f0f2f,128);
		fader1[8]=new LordFader(0xDfBfDf,0x000000,128);
		fader2[8]=new LordFader(0x000000,0xAf8f7f,128);
		
		for(int i=0;i<bob.length;i++) {
			bob[i].enabled=true;
			bob[i].bobSizeY=256;

			for(int y=0;y<128;y++) {
				for(int x=0;x<y;x++) {
					bob[i].bobdata[0][x+y*128]=0xff000000+fader2[i].colors[y];
				}
				for(int x=y;x<128;x++) {
					bob[i].bobdata[0][x+y*128]=0xff000000+fader1[i].colors[y];
				}
			}
			for(int y=0;y<128;y++) {
				for(int x=0;x<y;x++) {
					bob[i].bobdata[0][x+(y+128)*128]=0xff000000+fader1[i].colors[127-y];
				}
				for(int x=y;x<128;x++) {
					bob[i].bobdata[0][x+(y+128)*128]=0xff000000+fader2[i].colors[127-y];
				}
			}
			
			double index=0;
			double indexDelta=0;
			for(int j=1;j<64;j++) {
				for(int y=0;y<128*2;y++) {
					int width=128-j-j;
					index=0;
					indexDelta=128.0/width;
					for(int x=0;x<width;x++) {
						bob[i].bobdata[j][x+j+y*128]=bob[i].bobdata[0][(int)(index+0.5)+y*128];
						index+=indexDelta;
					}
				}
			}
		}
		
		turnbars=new Turnbar[9];
		
		sinatra1X1=Sinatra.getInstance(new double[]{900.0,1.0,200.0,0.4,0.0,360.0});//generated by LunarTools Sinus Editor 1.0
		sinatra1X2=Sinatra.getInstance(new double[]{1800.0,1.0,100.0,0.2,0.0,360.0});//generated by LunarTools Sinus Editor 1.0
		turnbars[0]=new TurnbarY(bob[0],sinatra1X1,sinatra1X2,Screen.screenCenterX-500,false);
		
		sinatra2X1=Sinatra.getInstance(new double[]{1800.0,2.0,100.0,0.2,0.0,360.0,100.0,0.4,0.0,360.0});//generated by LunarTools Sinus Editor 1.0
		sinatra2X2=Sinatra.getInstance(new double[]{3600.0,2.0,200.0,0.05,180.0,360.0,150.0,0.3,0.0,360.0});//generated by LunarTools Sinus Editor 1.0
		turnbars[1]=new TurnbarY(bob[1],sinatra2X1,sinatra2X2,Screen.screenCenterX+400,true);
		
		sinatra3X1=Sinatra.getInstance(new double[]{1800.0,2.0,100.0,0.2,0.0,360.0,50.0,0.4,0.0,360.0});//generated by LunarTools Sinus Editor 1.0
		sinatra3X2=Sinatra.getInstance(new double[]{3600.0,2.0,200.0,0.05,180.0,360.0,50.0,0.3,0.0,360.0});//generated by LunarTools Sinus Editor 1.0
		turnbars[2]=new TurnbarYA(bob[2],sinatra3X1,sinatra3X2,Screen.screenCenterX-0,true);
		
		sinatra1Y1=Sinatra.getInstance(new double[]{1200.0,1.0,200.0,0.3,0.0,360.0});//generated by LunarTools Sinus Editor 1.0
		sinatra1Y2=Sinatra.getInstance(new double[]{720.0,1.0,100.0,0.5,0.0,360.0});//generated by LunarTools Sinus Editor 1.0
		turnbars[3]=new TurnbarX(bob[3],sinatra1Y1,sinatra1Y2,Screen.screenCenterY-150,true);
		
		sinatra2Y1=Sinatra.getInstance(new double[]{900.0,1.0,200.0,0.4,0.0,360.0});//generated by LunarTools Sinus Editor 1.0
		sinatra2Y2=Sinatra.getInstance(new double[]{1800.0,1.0,100.0,0.2,0.0,360.0});//generated by LunarTools Sinus Editor 1.0
		turnbars[4]=new TurnbarX(bob[4],sinatra2Y1,sinatra2Y2,Screen.screenCenterY+50,false);
		
		sinatra4X1=Sinatra.getInstance(new double[]{3600.0,3.0,350.0,0.1,0.0,360.0,200.0,0.3,0.0,360.0,50.0,0.8,0.0,360.0,0.0,0.0,0.0});///generated by LunarTools Sinus Editor 1.0
		sinatra4X2=Sinatra.getInstance(new double[]{3600.0,2.0,150.0,0.2,0.0,360.0,100.0,0.3,0.0,360.0,0.0,0.0});//generated by LunarTools Sinus Editor 1.0
		turnbars[5]=new TurnbarYA(bob[5],sinatra4X1,sinatra4X2,Screen.screenCenterX-200,true);
		
		sinatra5X1=Sinatra.getInstance(new double[]{1800.0,3.0,100.0,1.0,0.0,360.0,100.0,0.4,0.0,360.0,20.0,2.0,0.0,360.0});//generated by LunarTools Sinus Editor 1.0
		sinatra5X2=Sinatra.getInstance(new double[]{1200.0,2.0,100.0,0.3,0.0,360.0,150.0,0.3,0.0,360.0});//generated by LunarTools Sinus Editor 1.0
		turnbars[6]=new TurnbarYA(bob[6],sinatra5X1,sinatra5X2,Screen.screenCenterX-200,true);
		
		
		sinatra3Y1=Sinatra.getInstance(new double[]{3600.0,2.0,150.0,0.3,0.0,360.0,50.0,0.2,0.0,360.0});//generated by LunarTools Sinus Editor 1.0
		sinatra3Y2=Sinatra.getInstance(new double[]{3600.0,2.0,150.0,0.2,0.0,360.0,50.0,0.3,0.0,360.0});//generated by LunarTools Sinus Editor 1.0
		turnbars[7]=new TurnbarXA(bob[7],sinatra3Y1,sinatra3Y2,Screen.screenCenterY-50,true);
		
		
		sinatra4Y1=Sinatra.getInstance(new double[]{1200.0,2.0,100.0,1.2,0.0,360.0,50.0,0.3,0.0,360.0});//generated by LunarTools Sinus Editor 1.0
		sinatra4Y2=Sinatra.getInstance(new double[]{3600.0,2.0,150.0,0.3,0.0,360.0,50.0,0.4,0.0,360.0});//generated by LunarTools Sinus Editor 1.0
		turnbars[8]=new TurnbarXA(bob[8],sinatra4Y1,sinatra4Y2,Screen.screenCenterY-50,false);
	}

	@Override
	public void initialize() {
		oBorder=200;
	}
	
	@Override
	public void vbi(){
		if((oPos+=oDir)==oBorder || oPos==0) {
			oDir=0-oDir;
		}
		
		for(int i=0;i<bob.length;i++) {
			if(++animPos==bob[i].bobSizeY) {
				animPos=0;
			}
		}
		
		for(int i=0;i<turnbars.length;i++) {
			turnbars[i].vbi();
		}
	}
	
	@Override
	public void worker1(){
		Turnbar.render_screendataWorking=LunarEngine.screendataToWork3;
		for(int i=0;i<turnbars.length;i++) {
			turnbars[i].render();
		}
	}

	@Override
	public void worker3(){
		Screen.screenClear(LunarEngine.screendataToReset,BACKGROUNDCOLOR);
	}
	
	@Override
	public void rotateBuffers() {
		rotateBuffers5();
	}
	
}
